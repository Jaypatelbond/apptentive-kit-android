plugins {
  id "co.riiid.gradle"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

// Set from Jenkins or Travis. Set by parent job and passed into template job.
def theVersionCode = System.getenv("BUILD_NUMBER") ?: 100
def theVersionName = extractSdkVersion()
def githubToken = System.getenv("GITHUB_TOKEN") ?: "ABC123"

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "apptentive.com.app"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode theVersionCode
        versionName theVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$support_library_version"
    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "com.google.android.material:material:$material_design_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation project(':apptentive-core')
    implementation project(':apptentive-core-ui')
    implementation project(':apptentive-feedback')
    implementation project(':apptentive-enjoyment-dialog')
    implementation project(':apptentive-survey')
    implementation project(':apptentive-notes')
    implementation project(':apptentive-navigate-to-link')
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
}

def extractSdkVersion() {
    def text = file('../apptentive-feedback/src/main/java/apptentive/com/android/feedback/Constants.kt').text
    def match = text =~ ~/SDK_VERSION\s*=\s*"(\d+\.\d+\.\d+)"/
    return match[0][1]
}

def getGitHash() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

task tag(type: Exec) {
    workingDir '.'
    
    commandLine 'git', 'tag', extractSdkVersion()
    commandLine 'git', 'push', '--tags'
}

github {
    owner = 'apptentive'
    repo = 'android-sdk'
    token = githubToken
    tagName = extractSdkVersion()
    targetCommitish = 'artifacts'
    name = "v${extractSdkVersion()}"
    body = """# Apptentive Android SDK
Release notes go here.
"""
    assets = [
    '../foo'
/*        'build/outputs/apk/release/app-release-unsigned.apk',
        'app/build/outputs/apk/release/app-release-unsigned.apk',
        '../app/build/outputs/apk/release/app-release-unsigned.apk',
*/    ]
}

